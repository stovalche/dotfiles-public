#!/usr/bin/env bash

set -u

# All supported choices
all=(wifi bluetooth)

# By default, show all (i.e., just copy the array)
show=("${all[@]}")

declare -A texts
texts[bluetooth]="bluetooth"
texts[wifi]="wifi"

declare -A icons
icons[bluetooth]="\uf01e"
icons[wifi]="\uf011"

declare -A actions
actions[wifi]="$HOME/.config/rofi/scripts/wifi-menu/wifi-menu"
actions[bluetooth]="$HOME/.config/rofi/scripts/bluetooth"

function write_message {
  icon="<span font_size=\"medium\">$1</span>"
  text="<span font_size=\"medium\">$2</span>"
  echo -n "\u200e$icon \u2068$text\u2069"
}

function print_selection {
  echo -e "$1" | $(read -r -d '' entry; echo "echo $entry")
}

declare -A messages
for entry in "${all[@]}"; do
  messages[$entry]=$(write_message "${icons[$entry]}" "${texts[$entry]^}")
done

if [ $# -gt 0 ]; then
  # If arguments given, use those as the selection
  selection="${@}"
else
  # Otherwise, use the CLI passed choice if given
  if [ -n "${selectionID+x}" ]; then
      selection="${messages[$selectionID]}"
  fi
fi

# Don't allow custom entries
echo -e "\0no-custom\x1ftrue"
# Use markup
echo -e "\0markup-rows\x1ftrue"

if [ -z "${selection+x}" ]; then
  echo -e "\0prompt\x1f â­˜  Tools "
  for entry in "${show[@]}"; do
    echo -e "${messages[$entry]}\0icon\x1f${icons[$entry]}"
  done
else
  for entry in "${show[@]}"; do
    if [ "$selection" = "$(print_selection "${messages[$entry]}")" ]; then
      ${actions[$entry]}
    fi
  done
fi
